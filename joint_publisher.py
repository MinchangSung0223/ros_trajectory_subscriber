#!/usr/bin/python
import sys
import rospy, math, time
import numpy as np
from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint



joint_trajectory_list = np.array([[-0.392699, -0.785085, 0.0, -2.3555949, 0.0, 1.57, 0.785398], [-0.2751990357142857, -0.8156102507366688, -0.055966127372439646, -2.313503252517798, -0.05842706820539729, 1.5708499650621797, 0.8502794528532691], [-0.15769907142857148, -0.8461355014733375, -0.11193225474487929, -2.2714116050355964, -0.11685413641079458, 1.571699930124359, 0.9151609057065382], [-0.04019910714285718, -0.8766607522100063, -0.16789838211731895, -2.2293199575533946, -0.17528120461619187, 1.5725498951865386, 0.9800423585598074], [0.07730085714285706, -0.907186002946675, -0.22386450948975858, -2.187228310071193, -0.23370827282158915, 1.573399860248718, 1.0449238114130766], [0.19480082142857136, -0.9377112536833437, -0.2798306368621983, -2.145136662588991, -0.29213534102698646, 1.5742498253108976, 1.1098052642663456], [0.31230078571428566, -0.9682365044200124, -0.3357967642346379, -2.1030450151067894, -0.35056240923238374, 1.5750997903730772, 1.1746867171196147], [0.42980074999999995, -0.9987617551566812, -0.39176289160707756, -2.0609533676245873, -0.408989477437781, 1.5759497554352566, 1.2395681699728838], [0.5473007142857141, -1.0292870058933499, -0.44772901897951717, -2.018861720142386, -0.4674165456431783, 1.5767997204974362, 1.3044496228261528], [0.6648006785714285, -1.0598122566300188, -0.5036951463519569, -1.9767700726601838, -0.5258436138485756, 1.5776496855596156, 1.3693310756794221], [0.7823006428571427, -1.0903375073666874, -0.5596612737243966, -1.934678425177982, -0.5842706820539729, 1.5784996506217952, 1.434212528532691], [0.8998006071428571, -1.1208627581033561, -0.6156274010968361, -1.8925867776957803, -0.6426977502593701, 1.5793496156839748, 1.4990939813859603], [1.0173005714285712, -1.1513880088400248, -0.6715935284692758, -1.8504951302135786, -0.7011248184647675, 1.5801995807461542, 1.5639754342392291], [1.1348005357142856, -1.1819132595766937, -0.7275596558417154, -1.8084034827313769, -0.7595518866701648, 1.5810495458083338, 1.6288568870924984], [1.2523005, -1.2124385103133624, -0.7835257832141551, -1.7663118352491751, -0.817978954875562, 1.5818995108705134, 1.6937383399457675], [1.369800464285714, -1.242963761050031, -0.8394919105865948, -1.7242201877669734, -0.8764060230809593, 1.5827494759326928, 1.7586197927990366], [1.4873004285714284, -1.2734890117866997, -0.8954580379590343, -1.6821285402847717, -0.9348330912863566, 1.5835994409948724, 1.8235012456523056], [1.6048003928571428, -1.3040142625233684, -0.951424165331474, -1.64003689280257, -0.9932601594917538, 1.5844494060570518, 1.8883826985055747], [1.7223003571428572, -1.3345395132600375, -1.0073902927039138, -1.597945245320368, -1.0516872276971512, 1.5852993711192314, 1.953264151358844], [1.8398003214285716, -1.3650647639967062, -1.0633564200763534, -1.5558535978381662, -1.1101142959025485, 1.586149336181411, 2.018145604212113], [1.9573002857142856, -1.3955900147333749, -1.1193225474487931, -1.5137619503559645, -1.1685413641079458, 1.5869993012435903, 2.083027057065382], [2.07480025, -1.4261152654700435, -1.1752886748212328, -1.4716703028737628, -1.2269684323133432, 1.58784926630577, 2.1479085099186515], [2.1923002142857144, -1.4566405162067122, -1.2312548021936722, -1.429578655391561, -1.2853955005187403, 1.5886992313679493, 2.2127899627719203], [2.3098001785714284, -1.4871657669433809, -1.287220929566112, -1.3874870079093593, -1.3438225687241376, 1.589549196430129, 2.277671415625189], [2.427300142857143, -1.5176910176800495, -1.3431870569385516, -1.3453953604271576, -1.402249636929535, 1.5903991614923085, 2.3425528684784584], [2.544800107142857, -1.5482162684167187, -1.3991531843109914, -1.3033037129449556, -1.4606767051349323, 1.591249126554488, 2.4074343213317277], [2.6623000714285716, -1.5787415191533873, -1.455119311683431, -1.2612120654627539, -1.5191037733403296, 1.5920990916166675, 2.472315774184997], [2.7798000357142856, -1.609266769890056, -1.5110854390558706, -1.2191204179805522, -1.5775308415457268, 1.592949056678847, 2.537197227038266], [2.8973, -1.6397920206267247, -1.5670515664283102, -1.1770287704983504, -1.635957909751124, 1.5937990217410265, 2.6020786798915347]],dtype=float)
if __name__ == "__main__":
	pub = rospy.Publisher('/joint_trajectory', JointTrajectory, queue_size=10)
	rospy.init_node('joint_trajectory_pub')
	rate = rospy.Rate(10)
	if len(sys.argv) <8:
		print("ERROR:Please Input joint values ")
		exit(0);


	jt = JointTrajectory()
	jt.header.stamp = rospy.Time.now()
	jt.joint_names.append("panda_joint1" )
	jt.joint_names.append("panda_joint2" )
	jt.joint_names.append("panda_joint3" )
	jt.joint_names.append("panda_joint4" )
	jt.joint_names.append("panda_joint5" )
	jt.joint_names.append("panda_joint6" )
	jt.joint_names.append("panda_joint7" )
	N = 30;
	for i in range(0,len(joint_trajectory_list)):
		
		points = JointTrajectoryPoint();
		temp = joint_trajectory_list[i]
		points.positions.append(float(temp[0]));
		points.positions.append(float(temp[1]));
		points.positions.append(float(temp[2]));
		points.positions.append(float(temp[3]));
		points.positions.append(float(temp[4]));
		points.positions.append(float(temp[5]));
		points.positions.append(float(temp[6]));
		points.time_from_start =  rospy.Duration.from_sec(0.01);
		jt.points.append(points)
	rospy.loginfo(points)
	pub.publish(jt)
	rate.sleep()
	pub.publish(jt)
	rate.sleep()
	pub.publish(jt)
	rate.sleep()
